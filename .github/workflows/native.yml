name: Compilation
on:
  push:
jobs:
  Build:
    strategy:
      fail-fast: false
      matrix:
        env:
          - os: ubuntu-latest
            name: Linux
            extras: |
              sudo apt-get update 
              sudo apt-get install -y xorg-dev build-essential libudev-dev libasound2
          - os: macos-latest
            name: MacOS
            extras: "echo no extras needed"
          - os: windows-latest
            name: Windows
            extras: "echo no extras needed"
    name: ${{ matrix.env.name }} Build
    runs-on: ${{ matrix.env.os }}
    steps:
      #on windows, clone non-recursively
      - uses: actions/checkout@v2
      - name: Checkout submodules, configure git
        if: matrix.env.os == 'windows-latest'
        run: |
          git submodule update --init --depth 0 libs/SDL/
          git submodule update --init --recursive --depth 0 libs/cimgui/
          git submodule update --init --recursive --depth 0 libs/fontstash/
          git submodule update --init --recursive --depth 0 libs/iconv-zig/
          git submodule update --init --recursive --depth 0 libs/wgpu-native/
          git submodule update --init --recursive --depth 0 libs/zigimg/

          cd libs/SDL/
          git submodule update --init --depth 0 submodules/jack2/
          git submodule update --init --depth 0 submodules/pipewire/
          cd ../..
      #on non-windows, clone recursively
      - uses: actions/checkout@v2
      - name: Checkout submodules, configure git
        if: matrix.env.os != 'windows-latest'
        run: |
          git submodule update --init --recursive --depth 0 
      - name: Extra prerequisites
        run: |
          echo running extras
          ${{ matrix.env.extras }}
      - name: Install Zig
        uses: goto-bus-stop/setup-zig@v2
      - name: Build native
        run: zig build
      - name: Cross compile to Linux x86_64 glibc
        if: matrix.env.os != 'macos-latest'
        run: zig build -Dtarget=x86_64-linux-gnu
      - name: Cross compile to Linux x86_64 musl
        if: matrix.env.os != 'macos-latest'
        run: zig build -Dtarget=x86_64-linux-musl
      - name: Cross compile to Windows x86_64 GNU
        run: zig build -Dtarget=x86_64-windows-gnu
      - name: Cross compile to MacOS x86_64
        run: zig build -Dtarget=x86_64-macos
      - name: Cross Compile to MacOS ARM64
        run: zig build -Dtarget=aarch64-macos
